@{
    ViewBag.Title = "IDFRequestList";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>IDF Request List</h3>
    </div>
    <div id="addnewpage" class="col-md-8 flt-nav-links">
        @*<a href="Javascript:void(0)" id="btnFilter" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>*@
        <a href="@Url.Action("IDFRequest")"> <i class="ion-plus"></i>Add New</a>
    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                @Html.Label("Drafts")
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="IDFDraftList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                @Html.Label("Submitted Requests")
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="IDFList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.AntiForgeryToken()
<div id="popup"></div>
<script type="text/javascript">
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
    });
    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };
    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            return new Date(value).toDateString();
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;
    var db;
    $("#IDFList").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 10,
        editing: true,
        filtering: true,
        controller: {

            loadData: function (filter) {
                return $.grep(db, function (idf) {
                    return (!filter.FileNo || idf.FileNo.toLowerCase().indexOf(filter.FileNo.toLowerCase()) > -1)
                        && (!filter.FirstApplicantOrganisation || idf.FirstApplicantOrganisation.toLowerCase().indexOf(filter.FirstApplicantOrganisation.toLowerCase()) > -1)
                        && (!filter.PIDepartment || idf.PIDepartment.toLowerCase().indexOf(filter.PIDepartment.toLowerCase()) > -1)
                        && (!filter.PrimaryInventorName || idf.PrimaryInventorName.toLowerCase().indexOf(filter.PrimaryInventorName.toLowerCase()) > -1)
                        && (!filter.PrimaryInventorType || idf.PrimaryInventorType.toLowerCase().indexOf(filter.PrimaryInventorType.toLowerCase())>-1);
                });
            }
        },
        fields: [
            { type: "text", name: "FileNo", title: "FileNo", editing: false, width: 100 },
            { type: "text", name: "IDFType", title: "Type", editing: false, width: 100 },
            { type: "text", name: "PIDepartment", title: "Department", editing: false },
            { type: "text", name: "PrimaryInventorName", title: "PI Name", editing: false },
            { type: "text", name: "PrimaryInventorType", title: "PI Type", editing: false },
            { type: "text", name: "Status", title: "Status", editing: false },
            { type: "text", name: "Remarks", title: "Remarks", editing: false },
            {
                type: "control", title: "Action",

                itemTemplate: function (value, item) {
                    var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                    var $customVButton = $("<button>")
                        .attr("type", "button")
                        .attr("class", "ion ion-eye")
                        .click(function (e) {
                            var url='@Url.Action("IDFRequest", "PatentIS")?ReqNo=' + item.FileNo;
                            window.location.href = url;
                            e.stopPropagation();
                        });                       
                    //var $customButton = $("<button>")
                    //    .attr("type", "button")
                    //    .attr("class", "ion ion-ios-trash")
                    //    .click(function (e) {
                    //        var choice = confirm("Do you want to remove this record?");
                    //        if (choice === true) {
                    //            var token = $("input[name=__RequestVerificationToken]").val();
                    //            $.ajax({
                    //                type: "POST",
                    //                url: 'DeleteDispute',
                    //                data: { __RequestVerificationToken: token, dno: item.DisputeNo },
                    //                success: function (data) {
                    //                    if (data.Status == "success") {
                    //                        messageBox("Verified dispute record has been removed successfully", "success");
                    //                        location.reload();
                    //                    } else {
                    //                        messageBox("Something went wrong please contact administrator", "error");
                    //                    }
                    //                },
                    //                error: function (err) {
                    //                    console.log("error1 : " + err);
                    //                }
                    //            });
                    //        }
                    //        e.stopPropagation();
                    //    });
                    if (item.Status == "Submitted to IPOffice" || item.Status == "Clarification needed") {
                        var $customButtonEdit = $("<button>")
                            .attr("class", "ion ion-edit")
                            .click(function (e) {
                                var url = '@Url.Action("IDFRequest", "PatentIS")?ReqNo=' + item.FileNo;
                                window.location.href = url;
                                e.stopPropagation();
                            });
                        return $("<div>").append($customButtonEdit);
                    } return $("<div>").append($customVButton);
                }
            }

        ]
    });
    $("#IDFList").jsGrid("option", "filtering", false);
    loadDetails();
    function loadDetails() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetIDFRequestList", "PatentIS")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                    db = result;
                    $("#IDFList").jsGrid({ data: db });
            },
            error: function (err) {
                console.log("error : " + err);
            }

        });
    }
    var db1;
    $("#IDFDraftList").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 10,
        editing: false,
        filtering: true,
        controller: {
            loadData: function (filter) {
                return $.grep(db1, function (draft) {
                    return (!filter.DraftNo || draft.DraftNo.toLowerCase().indexOf(filter.DraftNo.toLowerCase()) > -1)
                        && (!filter.PIDepartment || draft.PIDepartment.toLowerCase().indexOf(filter.PIDepartment.toLowerCase()) > -1)
                        && (!filter.PrimaryInventorName || draft.PrimaryInventorName.toLowerCase().indexOf(filter.PrimaryInventorName.toLowerCase()) > -1)
                        && (!filter.PrimaryInventorType || draft.PrimaryInventorType.toLowerCase().indexOf(filter.PrimaryInventorType.toLowerCase()) > -1)
                        && (!filter.Status || draft.Status.toLowerCase().indexOf(filter.Status.toLowerCase()) > -1)
                        && (!filter.Remarks || draft.Remarks.toLowerCase().indexOf(filter.Remarks.toLowerCase()) > -1);
                });
            }
        },
        fields: [
            { type: "text", name: "DraftNo", title: "DraftNo", editing: false, width: 100 },
            { type: "text", name: "IDFType", title: "Type", editing: false, width: 100 },
            { type: "text", name: "PIDepartment", title: "Department", editing: false },
            { type: "text", name: "PrimaryInventorName", title: "PI Name", editing: false },
            { type: "text", name: "PrimaryInventorType", title: "PI Type", editing: false },
            { type: "text", name: "Status", title: "Status", editing: false },
            { type: "text", name: "Remarks", title: "Remarks", editing: false },
            {
                type: "control", title: "Action",

                itemTemplate: function (value, item) {
                    var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                    var $customButton = $("<button>")
                        .attr("type", "button")
                        .attr("class", "ion ion-ios-trash")
                        .click(function (e) {
                            var choice = confirm("Do you want to remove this draft?");
                            if (choice === true) {
                                var token = $("input[name=__RequestVerificationToken]").val();
                                $.ajax({
                                    type: "POST",
                                    url: 'DeleteDraft',
                                    data: { __RequestVerificationToken: token, dno: item.DraftNo },
                                    success: function (draft) {
                                        if (draft == true) {
                                            messageBox("Draft has been removed successfully", "success");
                                            location.reload();
                                        } else {
                                            messageBox("Something went wrong please contact administrator", "error");
                                        }
                                    },
                                    error: function (err) {
                                        console.log("error1 : " + err);
                                    }
                                });
                            }
                            e.stopPropagation();
                        });
                    var $customButtonEdit = $("<button>")
                        .attr("class", "ion ion-edit")
                        .click(function (e) {
                             var url = '@Url.Action("IDFRequest", "PatentIS")?dno=' + item.DraftNo;
                             window.location.href = url;
                            e.stopPropagation();
                        });
                    return $("<div>").append($customButtonEdit).append($customButton);

                }
            }

        ]
    });
    $("#IDFDraftList").jsGrid("option", "filtering", false);
    loaddraftDetails();
    function loaddraftDetails() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetIDFDraftList", "PatentIS")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                    db1 = result;
                    $("#IDFDraftList").jsGrid({ data: db1 });
            },
            error: function (err) {
                console.log("error : " + err);
            }

        });
    }
</script>




